{"version":3,"sources":["assets/images/todo.jpg","assets/images/wheelshop.jpg","assets/images/dia.jpg","assets/images/miamy.jpg","components/header/Header.js","components/main/Main.js","utils.js","store/registration/reducers.js","store/combineReducer.js","store/registration/actions.js","components/registration/Registration.js","components/registration/ContainerRegistration.js","components/clients/Clients.js","components/clients/ContainerClients.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","Navbar","bg","expand","to","Image","className","src","roundedCircle","Toggle","aria-controls","Collapse","id","Nav","Form","inline","Button","variant","Main","Alert","Heading","thumbnail","CardGroup","Card","Img","require","Body","Title","Text","Footer","href","role","aria-label","getFact","fetch","then","response","json","defaultState","data","fact","combineReducers","registration","state","action","type","payload","Registration","fName","lName","gender","loyalty","creditCard","approved","date","Date","toString","split","toISOString","replace","submitHandler","event","register","props","preventDefault","includes","target","setState","setTimeout","changeHandler","name","value","this","Jumbotron","onSubmit","noValidate","Col","md","htmlFor","onChange","placeholder","required","color","onClick","Component","putDispatchToProps","dispatch","a","console","log","connect","Clients","Object","values","length","Table","striped","bordered","hover","map","client","index","key","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","thunk","App","path","component","ContainerRegistration","ContainerClients","exact","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","unregister"],"mappings":"kNAAAA,EAAOC,QAAU,IAA0B,kC,mBCA3CD,EAAOC,QAAU,IAA0B,uC,mBCA3CD,EAAOC,QAAU,IAA0B,iC,mBCA3CD,EAAOC,QAAU,IAA0B,mC,kMCiC5BC,EA5BA,WACb,OACE,gCACE,kBAACC,EAAA,EAAD,CAAQC,GAAG,QAAQC,OAAO,MACxB,kBAAC,IAAD,CAAMC,GAAG,KACP,kBAACC,EAAA,EAAD,CAAOC,UAAU,cACVC,IAAI,+EAA+EC,eAAa,KAEzG,kBAACP,EAAA,EAAOQ,OAAR,CAAeC,gBAAc,qBAC7B,kBAACT,EAAA,EAAOU,SAAR,CAAiBC,GAAG,oBAClB,kBAACC,EAAA,EAAD,CAAKP,UAAU,WACb,wEAA6C,6BAA7C,2BAC0B,gDAE5B,kBAACQ,EAAA,EAAD,CAAMC,QAAM,GACV,kBAAC,IAAD,CAAMX,GAAG,iBACP,kBAACY,EAAA,EAAD,CAAQV,UAAU,8BAA8BW,QAAQ,gBAAxD,iBAEF,kBAAC,IAAD,CAAMb,GAAG,YACP,kBAACY,EAAA,EAAD,CAAQV,UAAU,iBAAiBW,QAAQ,gBAA3C,iB,gCC+ECC,EAnGF,WACT,OACI,8BACI,kBAACC,EAAA,EAAD,CAAOF,QAAQ,QACX,kBAACE,EAAA,EAAMC,QAAP,CAAed,UAAW,eAA1B,wDACA,yIAC0G,yDACtG,6BACI,kBAACD,EAAA,EAAD,CAAOE,IAAI,yGAAyGc,WAAS,MAGrI,kBAACC,EAAA,EAAD,CAAWhB,UAAW,cAClB,kBAACiB,EAAA,EAAD,CAAMjB,UAAW,oBACb,8BACI,kBAACiB,EAAA,EAAKC,IAAN,CAAUlB,UAAW,oBAAqBW,QAAQ,MACxCV,IAAKkB,EAAQ,OAE3B,kBAACF,EAAA,EAAKG,KAAN,KACI,kBAACH,EAAA,EAAKI,MAAN,CAAYrB,UAAW,qBAAvB,oBACA,kBAACiB,EAAA,EAAKK,KAAN,kCAIJ,kBAACL,EAAA,EAAKM,OAAN,KACI,2BAAOvB,UAAU,cAAjB,0DAEJ,uBAAGwB,KAAK,mDACLxB,UAAU,0CAA0CyB,KAAK,UAD5D,QAGA,kBAACR,EAAA,EAAD,CAAMjB,UAAW,oBACjB,8BACI,kBAACiB,EAAA,EAAKC,IAAN,CAAUlB,UAAW,oBAAqBW,QAAQ,MACxCV,IAAI,uGACd,kBAACgB,EAAA,EAAKC,IAAN,CAAUlB,UAAW,oBAAqBW,QAAQ,MACxCV,IAAKkB,EAAQ,OAEvB,kBAACF,EAAA,EAAKG,KAAN,KACI,kBAACH,EAAA,EAAKI,MAAN,CAAYrB,UAAW,qBAAvB,aACA,kBAACiB,EAAA,EAAKK,KAAN,wHAGI,wEAGR,kBAACL,EAAA,EAAKM,OAAN,KACI,2BAAOvB,UAAU,cAAjB,4DAEJ,uBAAGwB,KAAK,iEACLxB,UAAU,0CAA0CyB,KAAK,UAD5D,mBAGJ,kBAACR,EAAA,EAAD,CAAMjB,UAAW,oBACb,8BACI,kBAACiB,EAAA,EAAKC,IAAN,CAAUlB,UAAW,4BAA6BW,QAAQ,MAChDV,IAAKkB,EAAQ,OAE3B,kBAACF,EAAA,EAAKG,KAAN,KACI,kBAACH,EAAA,EAAKI,MAAN,CAAYrB,UAAW,qBAAvB,oBACA,kBAACiB,EAAA,EAAKK,KAAN,qCAIJ,kBAACL,EAAA,EAAKM,OAAN,KACI,2BAAOvB,UAAU,cAAjB,wDAEJ,uBAAGwB,KAAK,kDACLxB,UAAU,0CAA0CyB,KAAK,UAD5D,QAGJ,kBAACR,EAAA,EAAD,CAAMjB,UAAW,oBACb,8BACI,kBAACiB,EAAA,EAAKC,IAAN,CAAUlB,UAAW,4BAA6BW,QAAQ,MAChDV,IAAKkB,EAAQ,OAE3B,kBAACF,EAAA,EAAKG,KAAN,KACI,kBAACH,EAAA,EAAKI,MAAN,CAAYrB,UAAW,qBAAvB,sBACA,kBAACiB,EAAA,EAAKK,KAAN,sDAIJ,kBAACL,EAAA,EAAKM,OAAN,KACI,2BAAOvB,UAAU,cAAjB,wDAEJ,uBAAGwB,KAAK,gEACLxB,UAAU,0CAA0CyB,KAAK,UAD5D,UAKhB,kDACA,yBAAKzB,UAAU,mBAAmByB,KAAK,QAAQC,aAAW,iBACtD,uBAAGF,KAAK,qDACLxB,UAAU,oBAAoByB,KAAK,UADtC,aAEA,uBAAGD,KAAK,wDACLxB,UAAU,oBAAoByB,KAAK,UADtC,YAEA,uBAAGD,KAAK,yDACLxB,UAAU,oBAAoByB,KAAK,UADtC,e,iEC3FT,IAAME,EAAU,kBAFdC,MAHO,oCAGIC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,W,ykBCE9C,IAAMC,EAAe,CACnBC,KAAM,GACNC,KAAK,ICJQC,4BAAgB,CAC7BC,aDMiC,WAAmC,IAAlCC,EAAiC,uDAAzBL,EAAcM,EAAW,uCACnE,OAAQA,EAAOC,MACb,IEX4B,oBFY1B,OAAO,EAAP,GACKF,EADL,CAEEJ,KAAK,GAAD,mBAAMI,EAAMJ,MAAZ,CAAkBK,EAAOE,YAEjC,IEfoB,WFgBlB,OAAO,EAAP,GACKH,EADL,CAEEH,KAAMI,EAAOE,UAGnB,OAAOH,K,wEG+JMI,G,iNAjLbJ,MAAQ,CACNK,MAAO,GACPC,MAAO,GACPC,OAAQ,OACRC,QAAS,cACTC,WAAY,GACZC,UAAW,EACXC,KAAM,IAAIC,MAAK,IAAIA,MAAOC,WACvBC,MAAM,OAAO,GAAG,QAAQC,cACxBD,MAAM,KAAK,GACXE,QAAQ,IAAI,M,EAQjBC,cAAgB,SAAAC,GAAU,IAChBC,EAAa,EAAKC,MAAlBD,SACRD,EAAMG,kBACF,EAAKrB,MAAMK,QACX,EAAKL,MAAMM,QACX,EAAKN,MAAMS,YACX,EAAKT,MAAMQ,QAAQc,SAAS,eAC9BJ,EAAMK,OAAO5D,WAAa,kBAE1BwD,EAAS,EAAKnB,OACdkB,EAAMK,OAAO5D,UAAY,GACzB,EAAK6D,SAAS,CACZnB,MAAO,GACPC,MAAO,GACPC,OAAQ,OACRC,QAAS,cACTC,WAAY,GACZC,UAAW,EACXC,KAAM,KACN,kBAAMc,YAAW,kBAAM,EAAKD,SAAS,CACrCd,UAAW,MACT,U,EAIRgB,cAAgB,SAAAR,GACd,EAAKM,SAAL,eAAiBN,EAAMK,OAAOI,KAAOT,EAAMK,OAAOK,S,oFA7BlDtC,EADmBuC,KAAKT,MAAhB9B,a,+BAiCA,IAAD,EAQHuC,KAAK7B,MANPK,EAFK,EAELA,MACAC,EAHK,EAGLA,MACAC,EAJK,EAILA,OACAC,EALK,EAKLA,QACAC,EANK,EAMLA,WACAC,EAPK,EAOLA,SAPK,EAaHmB,KAAKT,MAFP9B,EAXK,EAWLA,QACAO,EAZK,EAYLA,KAGF,OACE,6BACE,kBAACiC,EAAA,EAAD,KACE,0BACEnE,UAAU,mBACVoE,SAAUF,KAAKZ,cACfe,YAAU,GAEV,kBAACC,EAAA,EAAD,KACE,kBAACA,EAAA,EAAD,CAAKC,GAAG,IAAIvE,UAAU,QACpB,2BACEwE,QAAQ,4BACRxE,UAAU,aAFZ,cAMA,2BACEiE,MAAOvB,EACPsB,KAAK,QACLS,SAAUP,KAAKH,cACfxB,KAAK,OACLjC,GAAG,4BACHN,UAAU,eACV0E,YAAY,aACZC,UAAQ,IAEV,2BACEH,QAAQ,8BACRxE,UAAU,aAFZ,aAMA,2BACEiE,MAAOtB,EACPqB,KAAK,QACLS,SAAUP,KAAKH,cACfxB,KAAK,OACLjC,GAAG,8BACHN,UAAU,eACV0E,YAAY,YACZC,UAAQ,IAEV,2BACEH,QAAQ,8BACRxE,UAAU,aAFZ,UAMA,4BACEA,UAAU,eACVM,GAAG,gBACH0D,KAAK,SACLS,SAAUP,KAAKH,cACfE,MAAOrB,EACP+B,UAAQ,GAER,4BAAQV,MAAM,QAAd,QACA,4BAAQA,MAAM,UAAd,WAEF,2BACEO,QAAQ,8BACRxE,UAAU,aAFZ,mBAMA,4BACEA,UAAU,eACVM,GAAG,iBACH0D,KAAK,UACLS,SAAUP,KAAKH,cACfE,MAAOpB,EACP8B,UAAQ,GAER,4BAAQV,MAAM,eAAd,eACA,4BAAQA,MAAM,eAAd,eACA,4BAAQA,MAAM,cAAd,eAEW,gBAAZpB,GACD,2BACEoB,MAAOnB,EACPkB,KAAK,aACLS,SAAUP,KAAKH,cACfxB,KAAK,OACLjC,GAAG,aACHN,UAAU,eACV0E,YAAY,sBACZC,UAAQ,IAGT5B,GACD,kBAAClC,EAAA,EAAD,CAAOF,QAAQ,WACb,kBAACE,EAAA,EAAMC,QAAP,sDAGF,kBAACJ,EAAA,EAAD,CAAQV,UAAU,eAAe4E,MAAM,UAAUrC,KAAK,UAAtD,gBAOR,kBAACtB,EAAA,EAAD,CAAMjB,UAAU,eACd,kBAACiB,EAAA,EAAKvB,OAAN,mBACA,kBAACuB,EAAA,EAAKG,KAAN,KACE,kBAACH,EAAA,EAAKK,KAAN,KACGY,GAEH,kBAACxB,EAAA,EAAD,CAAQC,QAAQ,UAAUkE,QAAS,kBAAMlD,MAAzC,mB,GA3KemD,cCoBrBC,EAAqB,CACzBvB,SFpBuB,SAACvB,GAAD,MAAW,CAClCM,KAJ8B,oBAK9BC,QAASP,IEmBTN,QFhByB,WACzB,8CAAO,WAAMqD,GAAN,eAAAC,EAAA,+EAEgBtD,IAFhB,OAEGO,EAFH,OAGH8C,EAAS,CAAEzC,KAXO,WAWSC,QAASN,EAAKD,KAAK,KAH3C,gDAKHiD,QAAQC,IAAR,MALG,yDAAP,mDAAM,KEiBOC,eAVS,SAAC/C,GACvB,MAAO,CACLJ,KAAMI,EAAMD,aAAaH,KACzBC,KAAMG,EAAMD,aAAaF,QAOW6C,EAAzBK,EAtBe,SAAC3B,GAC7B,OACE,6BACE,kBAAC,EAAD,CACExB,KAAMwB,EAAMxB,KACZC,KAAMuB,EAAMvB,KACZP,QAAS8B,EAAM9B,QACf6B,SAAUC,EAAMD,e,QCwDT6B,G,MAhEC,SAAC5B,GACf,IAAOxB,EAAQqD,OAAOC,OAAO9B,EAAMxB,MACjC,OACI,6BACE,kBAACkC,EAAA,EAAD,KACIlC,EAAKuD,OAUL,kBAACC,EAAA,EAAD,CAAOC,SAAO,EAACC,UAAQ,EAACC,OAAK,EAACjF,QAAQ,SACpC,+BACA,4BACE,iCACA,sCACA,sCACA,uCACA,sCAGF,+BACCsB,EAAK4D,KAAI,SAACC,EAAQC,GAAW,IAExBrD,EAKeoD,EALfpD,MACAC,EAIemD,EAJfnD,MACAC,EAGekD,EAHflD,OACAI,EAEe8C,EAFf9C,KACAH,EACeiD,EADfjD,QACAC,EAAegD,EAAfhD,WACJ,OACE,wBAAIkD,IAAKhD,GACP,4BAAK+C,EAAQ,GACb,4BAAKrD,EAAM,IAAIC,GACH,SAAXC,EACC,4CACA,4CAEW,gBAAZC,GACD,wBAAI7C,UAAU,eAAe6C,GAEhB,gBAAZA,GACD,wBAAI7C,UAAU,gBAAgB6C,EAAU,iBAASC,GAEpC,eAAZD,GACD,wBAAI7C,UAAU,gBAAgB6C,GAE9B,4BAAKiD,EAAO9C,YA5CpB,yBAAKhD,UAAU,QACb,6EACA,yBAAKA,UAAU,aACb,kBAACD,EAAA,EAAD,CAAOE,IAAI,4EACJc,WAAS,UCKnBqE,eANS,SAAC/C,GACvB,MAAO,CACLJ,KAAMI,EAAMD,aAAaH,QAIdmD,EAhBU,SAAC3B,GACxB,OACE,6BACE,kBAAC,EAAD,CACExB,KAAMwB,EAAMxB,WCMdgE,EAAQC,sBAAYC,EAAYC,8BAAoBC,0BAAgBC,OAiB3DC,MAff,WACE,OACE,kBAAC,IAAD,CAAUN,MAAOA,GACf,yBAAKjG,UAAU,OACb,kBAAC,EAAD,MACA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOwG,KAAK,gBAAgBC,UAAWC,IACvC,kBAAC,IAAD,CAAOF,KAAK,WAAWC,UAAWE,IAClC,kBAAC,IAAD,CAAOC,OAAK,EAACJ,KAAK,IAAIC,UAAW7F,QCZvBiG,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCXNC,IAASC,OAAO,kBAAC,IAAD,KAAY,kBAAC,EAAD,OAAsBC,SAASC,eAAe,SD0HpE,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAM3F,MAAK,SAAAO,GACjCA,EAAaqF,kB","file":"static/js/main.0c74487c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/todo.e1fb62ff.jpg\";","module.exports = __webpack_public_path__ + \"static/media/wheelshop.4e7f39d9.jpg\";","module.exports = __webpack_public_path__ + \"static/media/dia.c0de32fd.jpg\";","module.exports = __webpack_public_path__ + \"static/media/miamy.fe545f3d.jpg\";","import React from 'react';\nimport {Button, Form, Image, Nav, Navbar} from \"react-bootstrap\";\nimport './header.scss';\nimport {Link} from 'react-router-dom'\n\nconst Header = () => {\n  return (\n    <header>\n      <Navbar bg=\"light\" expand=\"lg\">\n        <Link to=\"/\">\n          <Image className=\"header-logo\"\n                 src=\"https://pbs.twimg.com/profile_images/922827797713780736/YT7KdeiL_400x400.jpg\" roundedCircle/>\n        </Link>\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\"/>\n        <Navbar.Collapse id=\"basic-navbar-nav\">\n          <Nav className=\"mr-auto\">\n            <h6>Hi, I wanna to become a part of HeadWorks<br/>\n              See info about me below <span>&#128540;</span></h6>\n          </Nav>\n          <Form inline>\n            <Link to=\"/registration\">\n              <Button className=\"header-buttons-registration\" variant=\"outline-dark\">Registration</Button>\n            </Link>\n            <Link to=\"/clients\">\n              <Button className=\"header-buttons\" variant=\"outline-dark\">Clients</Button>\n            </Link>\n          </Form>\n        </Navbar.Collapse>\n      </Navbar>\n    </header>\n  );\n};\n\nexport default Header;\n","import React from 'react';\nimport './main.scss';\nimport {Image, Card, CardGroup, Alert} from \"react-bootstrap\";\n\nconst Main = () => {\n    return (\n        <main>\n            <Alert variant=\"dark\">\n                <Alert.Heading className={'alert-title'}>Hey, in this block you can find some of my projects.</Alert.Heading>\n                <p>\n                    There could be a text like my name is Roma and bla bla bla...but who needs it? So here it’s just text,<strong> I get high on coding</strong>\n                    <div>\n                        <Image src=\"https://cdn.cnn.com/cnnnext/dam/assets/180907100732-elon-musk-smokes-marijuana-podcast-1-large-169.jpg\" thumbnail/>\n                    </div>\n                </p>\n                <CardGroup className={'card-group'}>\n                    <Card className={'card-group__item'}>\n                        <span>\n                            <Card.Img className={'card-group__image'} variant=\"top\"\n                                      src={require('../../assets/images/todo.jpg')}/>\n                        </span>\n                        <Card.Body>\n                            <Card.Title className={'card-group__title'}>Todo App (React)</Card.Title>\n                            <Card.Text>\n                                Here is a nice Todo app.\n                            </Card.Text>\n                        </Card.Body>\n                        <Card.Footer>\n                            <small className=\"text-muted\">Technology stack : HTML5/CSS3/, React, Local Storage.</small>\n                        </Card.Footer>\n                        <a href=\"https://karpyshynroman.github.io/react_todo-app/\"\n                           className=\"btn btn-outline-dark card-group__button\" role=\"button\">See</a>\n                    </Card>\n                        <Card className={'card-group__item'}>\n                        <span>\n                            <Card.Img className={'card-group__image'} variant=\"top\"\n                                      src=\"https://cdn1.iconfinder.com/data/icons/logos-brands-1/24/logo_brand_brands_logos_apple_ios-512.png\"/>\n                            <Card.Img className={'card-group__image'} variant=\"top\"\n                                      src={require('../../assets/images/wheelshop.jpg')}/>\n                        </span>\n                            <Card.Body>\n                                <Card.Title className={'card-group__title'}>Wheelshop</Card.Title>\n                                <Card.Text>\n                                    I developed this ios application in my free time as a hobby.\n                                    I promise a discount if you order a pair of wheels.\n                                    <span>&#128181;&#128181;&#128181;</span>\n                                </Card.Text>\n                            </Card.Body>\n                            <Card.Footer>\n                                <small className=\"text-muted\">Technology stack : XCode, Swift, Alamofire, SwiftyJson.</small>\n                            </Card.Footer>\n                            <a href=\"https://apps.apple.com/us/app/wheelshop/id1482952026?l=ru&ls=1\"\n                               className=\"btn btn-outline-dark card-group__button\" role=\"button\">Go to Appstore</a>\n                        </Card>\n                        <Card className={'card-group__item'}>\n                            <span>\n                                <Card.Img className={'card-group__image rounded'} variant=\"top\"\n                                          src={require('../../assets/images/dia.jpg')}/>\n                            </span>\n                            <Card.Body>\n                                <Card.Title className={'card-group__title'}>Landing Page Dia</Card.Title>\n                                <Card.Text>\n                                    This is a nice landing page\n                                </Card.Text>\n                            </Card.Body>\n                            <Card.Footer>\n                                <small className=\"text-muted\">Technology stack : HTML5/CSS3/JS, SCSS, Figma, BEM.</small>\n                            </Card.Footer>\n                            <a href=\"https://karpyshynroman.github.io/dia/index.html\"\n                               className=\"btn btn-outline-dark card-group__button\" role=\"button\">See</a>\n                        </Card>\n                        <Card className={'card-group__item'}>\n                            <span>\n                                <Card.Img className={'card-group__image rounded'} variant=\"top\"\n                                          src={require('../../assets/images/miamy.jpg')}/>\n                            </span>\n                            <Card.Body>\n                                <Card.Title className={'card-group__title'}>Landing Page Miamy</Card.Title>\n                                <Card.Text>\n                                    This is a simple but pretty landing page too\n                                </Card.Text>\n                            </Card.Body>\n                            <Card.Footer>\n                                <small className=\"text-muted\">Technology stack : HTML5/CSS3/JS, SCSS, Figma, BEM.</small>\n                            </Card.Footer>\n                            <a href=\"https://karpyshynroman.github.io/layout_miami2/src/index.html\"\n                               className=\"btn btn-outline-dark card-group__button\" role=\"button\">See</a>\n                        </Card>\n                </CardGroup>\n            </Alert>\n            <h2>Me on social media</h2>\n            <div className=\"btn-group social\" role=\"group\" aria-label=\"Basic example\">\n                <a href=\"https://github.com/karpyshynroman?tab=repositories\"\n                   className=\"btn btn-secondary\" role=\"button\">My Github</a>\n                <a href=\"https://www.facebook.com/roma.karpyshyn?ref=bookmarks\"\n                   className=\"btn btn-secondary\" role=\"button\">Facebook</a>\n                <a href=\"https://www.linkedin.com/in/karpyshyn-roman-4b8151186/\"\n                   className=\"btn btn-secondary\" role=\"button\">LinkedIn</a>\n            </div>\n        </main>\n    );\n};\n\nexport default Main;\n","const factUrl = 'https://meowfacts.herokuapp.com/';\n\nfunction getData(url) {\n  return fetch(url).then(response => response.json());\n}\nexport const getFact = () => getData(factUrl);\n","import {\n  REGISTRATION_ADD,\n  FACT_GET\n} from \"./actions\";\n\nconst defaultState = {\n  data: [],\n  fact:''\n};\n\nexport const registrationReducer = (state = defaultState, action) => {\n  switch (action.type) {\n    case REGISTRATION_ADD:\n      return {\n        ...state,\n        data: [...state.data, action.payload]\n      };\n    case FACT_GET:\n      return {\n        ...state,\n        fact: action.payload\n      };\n  }\n  return state;\n};\n","import {combineReducers} from \"redux\";\nimport {registrationReducer} from \"./registration/reducers\";\n\nexport default combineReducers({\n  registration: registrationReducer\n});\n","import {getFact} from \"../../utils\";\nexport const REGISTRATION_ADD = 'REGISTRATION_ADD ';\nexport const FACT_GET = 'FACT_GET';\n\nexport  const register = (data) => ({\n  type: REGISTRATION_ADD,\n  payload: data\n});\n\nexport const getMeowFact = () => {\n  return async dispatch => {\n    try {\n      const fact = await getFact();\n      dispatch({ type: FACT_GET, payload: fact.data[0]});\n    }catch (e) {\n      console.log(e)\n    }\n  }\n};\n","import React, {Component} from 'react';\nimport {Alert, Button, Col, Jumbotron, Card} from \"react-bootstrap\";\nimport './registration.scss';\nclass Registration extends Component {\n\n  state = {\n    fName: '',\n    lName: '',\n    gender: 'Male',\n    loyalty: 'Unavailable',\n    creditCard: '',\n    approved : false,\n    date: new Date(new Date().toString()\n      .split('GMT')[0]+' UTC').toISOString()\n      .split('.')[0]\n      .replace('T',' ')\n  };\n\n  componentDidMount() {\n    const { getFact} = this.props;\n    getFact();\n  }\n\n  submitHandler = event => {\n    const { register } = this.props;\n    event.preventDefault();\n    if(!this.state.fName ||\n      (!this.state.lName)||\n      (!this.state.creditCard &&\n        this.state.loyalty.includes(\"Credit Card\"))) {\n      event.target.className += ' was-validated';\n    } else {\n      register(this.state);\n      event.target.className = '';\n      this.setState({\n        fName: '',\n        lName: '',\n        gender: 'Male',\n        loyalty: 'Unavailable',\n        creditCard: '',\n        approved : true,\n        date: ''\n      },() => setTimeout(() => this.setState({\n        approved : false\n      }), 1000))\n    }\n  };\n\n  changeHandler = event => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  render() {\n    const {\n      fName,\n      lName,\n      gender,\n      loyalty,\n      creditCard,\n      approved,\n    } = this.state;\n\n    const {\n      getFact,\n      fact,\n    } = this.props;\n\n    return (\n      <div>\n        <Jumbotron>\n          <form\n            className=\"needs-validation\"\n            onSubmit={this.submitHandler}\n            noValidate\n          >\n            <Col>\n              <Col md=\"6\" className=\"form\">\n                <label\n                  htmlFor=\"defaultFormRegisterNameEx\"\n                  className=\"grey-text\"\n                >\n                  First name\n                </label>\n                <input\n                  value={fName}\n                  name=\"fName\"\n                  onChange={this.changeHandler}\n                  type=\"text\"\n                  id=\"defaultFormRegisterNameEx\"\n                  className=\"form-control\"\n                  placeholder=\"First name\"\n                  required\n                />\n                <label\n                  htmlFor=\"defaultFormRegisterEmailEx2\"\n                  className=\"grey-text\"\n                >\n                  Last name\n                </label>\n                <input\n                  value={lName}\n                  name=\"lName\"\n                  onChange={this.changeHandler}\n                  type=\"text\"\n                  id=\"defaultFormRegisterEmailEx2\"\n                  className=\"form-control\"\n                  placeholder=\"Last name\"\n                  required\n                />\n                <label\n                  htmlFor=\"defaultFormRegisterEmailEx2\"\n                  className=\"grey-text\"\n                >\n                  Gender\n                </label>\n                <select\n                  className=\"form-control\"\n                  id=\"client-gender\"\n                  name=\"gender\"\n                  onChange={this.changeHandler}\n                  value={gender}\n                  required\n                >\n                  <option value=\"Male\">Male</option>\n                  <option value=\"Female\">Female</option>\n                </select>\n                <label\n                  htmlFor=\"defaultFormRegisterEmailEx2\"\n                  className=\"grey-text\"\n                >\n                  Loyalty Program\n                </label>\n                <select\n                  className=\"form-control\"\n                  id=\"client-loyalty\"\n                  name=\"loyalty\"\n                  onChange={this.changeHandler}\n                  value={loyalty}\n                  required\n                >\n                  <option value=\"Unavailable\">Unavailable</option>\n                  <option value=\"Credit Card\">Credit Card</option>\n                  <option value=\"Mobile App\">Mobile App</option>\n                </select>\n                {loyalty === 'Credit Card' &&\n                <input\n                  value={creditCard}\n                  name=\"creditCard\"\n                  onChange={this.changeHandler}\n                  type=\"text\"\n                  id=\"creditCard\"\n                  className=\"form-control\"\n                  placeholder=\"xxxx-xxxx-xxxx-xxxx\"\n                  required\n                />\n                }\n                {approved &&\n                <Alert variant=\"success\">\n                  <Alert.Heading>Success 🤗🤗🤗</Alert.Heading>\n                </Alert>\n                }\n                <Button className=\"form__submit\" color=\"primary\" type=\"submit\">\n                  Register\n                </Button>\n              </Col>\n            </Col>\n          </form>\n        </Jumbotron>\n        <Card className=\"text-center\">\n          <Card.Header>MEOW FACTS</Card.Header>\n          <Card.Body>\n            <Card.Text>\n              {fact}\n            </Card.Text>\n            <Button variant=\"primary\" onClick={() => getFact()}>One More</Button>\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n\nexport default Registration;\n","import React from 'react';\nimport {connect} from \"react-redux\";\nimport {register ,getMeowFact} from \"../../store/registration/actions\";\nimport Registration from \"./Registration\";\n\nconst ContainerRegistration = (props) => {\n  return (\n    <div>\n      <Registration\n        data={props.data}\n        fact={props.fact}\n        getFact={props.getFact}\n        register={props.register}\n      />\n    </div>\n  );\n};\nconst putStateToProps = (state) => {\n  return {\n    data: state.registration.data,\n    fact: state.registration.fact,\n  }\n};\nconst putDispatchToProps = {\n  register,\n  getFact: getMeowFact\n};\nexport default connect(putStateToProps, putDispatchToProps)(ContainerRegistration);\n","import React from 'react';\nimport {Image, Jumbotron, Table} from \"react-bootstrap\";\nimport './clients.scss';\n\nconst Clients = (props) => {\n  const  data  = Object.values(props.data);\n    return (\n        <div>\n          <Jumbotron>\n            {!data.length\n              ?\n              <div className=\"baby\">\n                <h1>There is nothing yet, please register someone</h1>\n                <div className=\"baby__img\">\n                  <Image src=\"https://media.tenor.com/images/d0a758ec760138aa333920d25a16383b/tenor.gif\"\n                         thumbnail />\n                </div>\n              </div>\n              :\n              <Table striped bordered hover variant=\"light\">\n                <thead>\n                <tr>\n                  <th>#</th>\n                  <th>Client</th>\n                  <th>Gender</th>\n                  <th>Loyalty</th>\n                  <th>Date</th>\n                </tr>\n                </thead>\n                <tbody>\n                {data.map((client, index) => {\n                  const\n                    { fName,\n                      lName,\n                      gender,\n                      date,\n                      loyalty,\n                      creditCard } = client;\n                  return(\n                    <tr key={date}>\n                      <th>{index + 1}</th>\n                      <th>{fName+' '+lName}</th>\n                      {gender === 'Male'?\n                        <th>👨</th> :\n                        <th>👩</th>\n                      }\n                      {loyalty === 'Unavailable'&&\n                      <th className=\"text-danger\">{loyalty}</th>\n                      }\n                      {loyalty === 'Credit Card'&&\n                      <th className=\"text-warning\">{loyalty + ' 💳 ' + creditCard}</th>\n                      }\n                      {loyalty === 'Mobile App'&&\n                      <th className=\"text-primary\">{loyalty}</th>\n                      }\n                      <th>{client.date}</th>\n                    </tr>\n                  )\n                })}\n                </tbody>\n              </Table>\n            }\n\n          </Jumbotron>\n        </div>\n    );\n};\n\nexport default Clients;\n","import React from 'react';\nimport Clients from \"./Clients\";\nimport {connect} from \"react-redux\";\n\nconst ContainerClients = (props) => {\n  return (\n    <div>\n      <Clients\n        data={props.data}\n      />\n    </div>\n  );\n};\n\nconst putStateToProps = (state) => {\n  return {\n    data: state.registration.data,\n  }\n};\n\nexport default connect(putStateToProps)(ContainerClients);\n","import React from 'react';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './App.scss';\nimport Header from \"./components/header/Header\";\nimport Main from \"./components/main/Main\";\nimport {Route, Switch} from \"react-router-dom\";\nimport {createStore,applyMiddleware} from \"redux\";\nimport thunk from 'redux-thunk';\nimport rootReducer from './store/combineReducer';\nimport { Provider } from 'react-redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport ContainerRegistration from \"./components/registration/ContainerRegistration\";\nimport ContainerClients from \"./components/clients/ContainerClients\";\n\nconst store = createStore(rootReducer,composeWithDevTools(applyMiddleware(thunk)));\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <div className=\"App\">\n        <Header/>\n        <Switch>\n          <Route path='/registration' component={ContainerRegistration}/>\n          <Route path='/clients' component={ContainerClients}/>\n          <Route exact path='/' component={Main}/>\n        </Switch>\n      </div>\n    </Provider>\n  );\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {HashRouter} from \"react-router-dom\";\n\nReactDOM.render(<HashRouter><App /></HashRouter>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}